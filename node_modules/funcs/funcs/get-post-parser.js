;(function() {
    "use strict";

    // обычный объект превращаем в полские данные
    // где ключом будет нечто вроде:  "a[]"
    f.json2formDataArr = function(data, keyPrefix) {

        function value2arr(value, keyPrefix) {
            if ( !keyPrefix ) {
                keyPrefix = "";
            }

            var out = [];

            if ( f.isFileList(value) ) {
                for(var i=0, val, n=value.length; i<n; i++) {
                    val = value[i];
                    out = out.concat(value2arr(val, keyPrefix + '[]'));
                }
            } else

            if ( f.isArray(value) ) {
                for(var i=0, val, n=value.length; i<n; i++) {
                    val = value[i];
                    out = out.concat(value2arr(val, keyPrefix + '[]'));
                }
            } else
            if ( f.isObject(value) ) {
                out = out.concat(f.json2formDataArr(value, keyPrefix));
            } else {
                out.push({
                    key: keyPrefix,
                    value: value
                })
            }

            return out;
        }

        if (!keyPrefix) {
            keyPrefix = "";
        }

        var out = [];
        for (var key in data) {
            if ( keyPrefix ) {
                out = out.concat(value2arr(data[key], keyPrefix + '[' + key + ']' ));
            } else {
                out = out.concat(value2arr(data[key], key ));
            }
        }

        return out;
    };

    // превращаем объект в queryString
    function http_build_query(formdata, arg_separator) {

      var value, key, tmp = [],
        that = this;

      var _http_build_query_helper = function(key, val, arg_separator) {
        var k, tmp = [];
        if (val === true) {
          val = '1';
        } else if (val === false) {
          val = '0';
        }
        if (val != null) {
          if (typeof val === 'object') {
            for (k in val) {
              if (val[k] != null) {
                tmp.push(_http_build_query_helper(key + '[' + k + ']', val[k], arg_separator));
              }
            }
            return tmp.join(arg_separator);
          } else if (typeof val !== 'function') {
            return encodeURIComponent(key) + '=' + encodeURIComponent(val);
          } else {
            throw new Error('There was an error processing for http_build_query().');
          }
        } else {
          return '';
        }
      };

      if (!arg_separator) {
        arg_separator = '&';
      }
      for (key in formdata) {
        value = formdata[key];
        var query = _http_build_query_helper(key, value, arg_separator);
        if (query !== '') {
          tmp.push(query);
        }
      }

      return tmp.join(arg_separator);
    }
    window.http_build_query = f.http_build_query = http_build_query;

})();
