;(function() {
    "use strict";

    // здесь будут расширения для String
    
	f.likeStr = function(str, search) {
		return str.toLowerCase().indexOf(search) != -1;
	};
    
    // первая буква в верхнем регистре + trim
    f.upFirstLetter = function(str) {
        str = str || "";// undefined, null => ""
        
        if ( !f.isString(str) ) {// custom objects and another
            str += "";
        }
        
        str = str.trim();
		/// (str[0] || "" ) пустая строка
        return (str[0] || "" ).toUpperCase() + str.slice(1);
    };
    
    // почти как f.currencySpaces,
    // только без округления
    f.addSpaces = function(str) {
        str = str.replace(/ /g, "");

        var hasPoint = str.indexOf(".") != -1; // "10."
        var afterPoint = str.split(".")[1] || "";
        str = str.split(".")[0];

        var symbols = str.split(""), symb;
        var out = [];
        var minus = symbols[0] == "-" ? "-" : "";

        if (minus) {
            symbols.splice(0, 1);
        }
        var n = symbols.length, x;

        if (n > 3) {
            for (var i = n - 1; i >= 0; i--) {
                symb = symbols[i];
                x = n - i - 1;

                if (x % 3 === 0 && x) {
                    out.push(" ");
                }

                out.push(symb);
            }
        } else {
            out = symbols.reverse();
        }


        out = minus + out.reverse().join("");

        if (hasPoint) {
            out += ".";
        }
        if (afterPoint) {
            afterPoint += "";
            out += afterPoint;
        }

        return out;
    };
    
    // 1 участник, 2 участника, 5 участников
    f.number2postfixIndex = function(numb) {
        if ( !numb ) { // 0
            return 5;
        }
        
        var postfixIndex = 5;
        if ( 
            /^[^1]?1$/.test(numb)
        ) {
            postfixIndex = 1;
        } else
        if ( 
            /^[^1]?[234]$/.test(numb)
        ) {
            postfixIndex = 2;
        }
        
        return postfixIndex;
    };
    
})();
